# MCPLookup.org Environment Variables
# Copy this file to .env.local for local development

# =============================================================================
# STORAGE CONFIGURATION (AUTOMATIC PROVIDER DETECTION)
# =============================================================================
# The storage system automatically detects the best provider:
# 1. Tests (NODE_ENV=test) -> In-memory storage
# 2. Production with Upstash -> Upstash Redis
# 3. Development with local Redis -> Local Redis
# 4. Fallback -> In-memory storage

# Option 1: Upstash Redis (Production - Serverless)
# Sign up at https://upstash.com and create a Redis database
UPSTASH_REDIS_REST_URL=https://your-database.upstash.io
UPSTASH_REDIS_REST_TOKEN=your-token-here

# Option 2: Local Redis (Development with Docker)
# Used by docker-compose.yml for local development
REDIS_URL=redis://localhost:6379

# Alternative local Redis configuration:
# REDIS_HOST=localhost
# REDIS_PORT=6379
# REDIS_PASSWORD=your-password

# Option 3: Vercel KV (Alternative to Upstash)
# KV_REST_API_URL=
# KV_REST_API_TOKEN=

# Application URLs (optional - auto-detected in most cases)
NEXT_PUBLIC_APP_URL=https://mcplookup.org
NEXT_PUBLIC_API_VERSION=v1

# DNS and Health Check Configuration (optional - sensible defaults)
DNS_RESOLVER_URL=https://cloudflare-dns.com/dns-query
HEALTH_CHECK_TIMEOUT=5000
VERIFICATION_TOKEN_TTL=86400
MAX_CONCURRENT_HEALTH_CHECKS=10

# Feature Flags (optional - enabled by default)
ENABLE_AUTO_DISCOVERY=true
ENABLE_ANALYTICS=true
ENABLE_EXTERNAL_APIS=true
ENABLE_WELL_KNOWN_DISCOVERY=true

# Authentication (optional - for UI features only)
NEXTAUTH_URL=https://mcplookup.org
NEXTAUTH_SECRET=your-secret-key-here
GITHUB_CLIENT_ID=your-github-client-id
GITHUB_CLIENT_SECRET=your-github-client-secret

# Analytics and Monitoring (optional)
NEXT_PUBLIC_VERCEL_ANALYTICS_ID=your-analytics-id

# Development Settings (optional)
NODE_ENV=development
MOCK_DNS_VERIFICATION=false
ENABLE_DEBUG_LOGGING=false

# =============================================================================
# FLEXIBLE STORAGE - NO MANDATORY DATABASE!
# =============================================================================
# This application works with multiple storage options:
#
# ✅ In-Memory (Default) - Zero infrastructure, perfect for development/testing
# ✅ Local Redis - Docker-based development with persistence
# ✅ Upstash Redis - Serverless production storage
#
# Unlike traditional apps, you DON'T need:
# - DATABASE_URL (PostgreSQL/MySQL)
# - Complex database migrations
# - Database hosting/management
# - Connection pooling configuration
#
# The storage abstraction automatically selects the best available option!
