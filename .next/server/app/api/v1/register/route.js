(()=>{var e={};e.id=223,e.ids=[223],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},33742:(e,r,i)=>{"use strict";i.d(r,{_2:()=>z,gS:()=>g,vR:()=>m});var t=i(45697);let s=t.z.object({name:t.z.string().describe("Unique tool identifier within the server"),description:t.z.string().describe("Human-readable description of what the tool does"),inputSchema:t.z.record(t.z.any()).describe("JSON Schema defining tool parameters")}),o=t.z.object({uri:t.z.string().describe("Unique resource identifier (URI)"),name:t.z.string().describe("Human-readable resource name"),description:t.z.string().optional().describe("Resource description"),mimeType:t.z.string().optional().describe("MIME type for binary resources")}),n=t.z.object({name:t.z.string().describe("Server name from MCP initialize"),version:t.z.string().describe("Server version"),protocolVersion:t.z.string().describe("Supported MCP protocol version"),capabilities:t.z.object({tools:t.z.boolean().optional().describe("Supports tools"),resources:t.z.boolean().optional().describe("Supports resources"),prompts:t.z.boolean().optional().describe("Supports prompts"),logging:t.z.boolean().optional().describe("Supports logging")}).optional().describe("Server capabilities from MCP spec")}),a=t.z.object({authorizationUrl:t.z.string().url().describe("OAuth2 authorization endpoint"),tokenUrl:t.z.string().url().describe("OAuth2 token endpoint"),scopes:t.z.array(t.z.string()).describe("Available OAuth2 scopes"),clientId:t.z.string().optional().describe("Public client ID if available")}),c=t.z.object({type:t.z.enum(["none","api_key","oauth2","basic"]).describe("Authentication method required"),oauth2:a.optional().describe("OAuth2 configuration if applicable"),apiKeyLocation:t.z.enum(["header","query","body"]).optional().describe("Where to send API key"),apiKeyName:t.z.string().optional().describe("API key parameter/header name"),description:t.z.string().optional().describe("Auth setup instructions for users")}),d=t.z.object({status:t.z.enum(["healthy","degraded","down","unknown"]).describe("Current operational status"),uptime_percentage:t.z.number().min(0).max(100).describe("Uptime over last 30 days"),avg_response_time_ms:t.z.number().min(0).describe("Average response time in milliseconds"),error_rate:t.z.number().min(0).max(1).describe("Error rate over last 24 hours"),last_check:t.z.string().datetime().describe("ISO 8601 timestamp of last health check"),consecutive_failures:t.z.number().min(0).describe("Current consecutive failed checks")}),l=t.z.object({dns_verified:t.z.boolean().describe("Domain ownership verified via DNS TXT record"),endpoint_verified:t.z.boolean().describe("MCP endpoint responds to protocol checks"),ssl_verified:t.z.boolean().describe("Endpoint uses valid SSL certificate"),last_verification:t.z.string().datetime().describe("Last successful verification timestamp"),verification_method:t.z.string().describe("Method used for verification (e.g., 'dns-txt-challenge')"),dns_record:t.z.string().optional().describe("DNS TXT record value used for verification")}),u=t.z.enum(["communication","productivity","data","development","content","integration","analytics","security","finance","ecommerce","social","other"]),p=t.z.object({category:u.describe("Primary capability category"),subcategories:t.z.array(t.z.string()).describe("Specific capability tags"),intent_keywords:t.z.array(t.z.string()).describe("Keywords for natural language intent matching"),use_cases:t.z.array(t.z.string()).describe("Common use case descriptions")}),b=t.z.object({domain:t.z.string().describe("Verified domain name (e.g., 'gmail.com')"),endpoint:t.z.string().url().describe("Full MCP HTTP endpoint URL"),name:t.z.string().describe("Human-readable server name"),description:t.z.string().describe("Server description and primary purpose"),server_info:n.describe("MCP server information from initialize"),tools:t.z.array(s).describe("Available tools from tools/list"),resources:t.z.array(o).describe("Available resources from resources/list"),transport:t.z.enum(["streamable_http","sse","stdio"]).describe("Supported transport protocol"),capabilities:p.describe("Capability classification for discovery"),auth:c.describe("Authentication requirements and configuration"),cors_enabled:t.z.boolean().describe("Whether CORS is enabled for web clients"),rate_limits:t.z.object({requests_per_minute:t.z.number().optional(),requests_per_hour:t.z.number().optional(),burst_limit:t.z.number().optional()}).optional().describe("Rate limiting information if known"),health:d.describe("Current operational health metrics"),verification:l.describe("Trust and verification status"),created_at:t.z.string().datetime().describe("Registration timestamp"),updated_at:t.z.string().datetime().describe("Last update timestamp"),maintainer:t.z.object({name:t.z.string().optional(),email:t.z.string().email().optional(),url:t.z.string().url().optional()}).optional().describe("Server maintainer information")}),m=t.z.object({domain:t.z.string().optional().describe("Exact domain match (e.g., 'github.com')"),capability:t.z.string().optional().describe("Required capability (e.g., 'email_send')"),category:u.optional().describe("Capability category filter"),intent:t.z.string().optional().describe("Natural language intent (e.g., 'check my email')"),keywords:t.z.array(t.z.string()).optional().describe("Search keywords"),use_case:t.z.string().optional().describe("Specific use case description"),auth_types:t.z.array(t.z.string()).optional().describe("Acceptable authentication types"),transport:t.z.enum(["streamable_http","sse","stdio"]).optional().describe("Required transport"),min_uptime:t.z.number().min(0).max(100).optional().describe("Minimum uptime percentage"),max_response_time:t.z.number().min(0).optional().describe("Maximum acceptable response time (ms)"),cors_required:t.z.boolean().optional().describe("Requires CORS support"),limit:t.z.number().min(1).max(100).default(10).describe("Maximum number of results"),offset:t.z.number().min(0).default(0).describe("Pagination offset"),include_health:t.z.boolean().default(!0).describe("Include real-time health metrics"),include_tools:t.z.boolean().default(!0).describe("Include tool definitions"),include_resources:t.z.boolean().default(!1).describe("Include resource definitions"),sort_by:t.z.enum(["relevance","uptime","response_time","created_at"]).default("relevance").describe("Sort order")});t.z.object({servers:t.z.array(b).describe("Matching MCP servers"),pagination:t.z.object({total_count:t.z.number().describe("Total servers matching criteria"),returned_count:t.z.number().describe("Number of servers in this response"),offset:t.z.number().describe("Current pagination offset"),has_more:t.z.boolean().describe("Whether more results are available")}).describe("Pagination information"),query_metadata:t.z.object({query_time_ms:t.z.number().describe("Query execution time in milliseconds"),cache_hit:t.z.boolean().describe("Whether result was served from cache"),filters_applied:t.z.array(t.z.string()).describe("List of filters that were applied")}).describe("Query execution metadata"),suggestions:t.z.array(t.z.string()).optional().describe("Alternative search suggestions if no results")});let g=t.z.object({domain:t.z.string().describe("Domain to register (e.g., 'api.example.com')"),endpoint:t.z.string().url().describe("MCP endpoint URL"),contact_email:t.z.string().email().describe("Contact email for verification"),description:t.z.string().optional().describe("Server description")}),z=t.z.object({challenge_id:t.z.string().uuid().describe("Unique challenge identifier"),domain:t.z.string().describe("Domain being verified"),txt_record_name:t.z.string().describe("DNS TXT record name to create"),txt_record_value:t.z.string().describe("DNS TXT record value to set"),expires_at:t.z.string().datetime().describe("Challenge expiration time"),instructions:t.z.string().describe("Human-readable setup instructions")})},35672:e=>{"use strict";e.exports=require("dns/promises")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},54374:(e,r,i)=>{"use strict";i.r(r),i.d(r,{patchFetch:()=>z,routeModule:()=>p,serverHooks:()=>g,workAsyncStorage:()=>b,workUnitAsyncStorage:()=>m});var t={};i.r(t),i.d(t,{OPTIONS:()=>u,POST:()=>l});var s=i(96559),o=i(48088),n=i(37719),a=i(32190),c=i(33742),d=i(57116);async function l(e){try{let r=await e.json(),i=c.gS.parse(r),t=(0,d.lI)();if(!await t.verifyMCPEndpoint(i.endpoint))return a.NextResponse.json({error:"Invalid MCP endpoint",details:"The provided endpoint does not respond to MCP protocol requests"},{status:400});let s=await t.initiateDNSVerification(i),o=c._2.parse(s);return a.NextResponse.json(o,{headers:{"Cache-Control":"no-cache","Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"POST, OPTIONS","Access-Control-Allow-Headers":"Content-Type"}})}catch(e){if(console.error("Registration API error:",e),e instanceof Error&&"ZodError"===e.name)return a.NextResponse.json({error:"Invalid request data",details:e.message},{status:400});return a.NextResponse.json({error:"Internal server error"},{status:500})}}async function u(){return new a.NextResponse(null,{status:200,headers:{"Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"POST, OPTIONS","Access-Control-Allow-Headers":"Content-Type"}})}let p=new s.AppRouteRouteModule({definition:{kind:o.RouteKind.APP_ROUTE,page:"/api/v1/register/route",pathname:"/api/v1/register",filename:"route",bundlePath:"app/api/v1/register/route"},resolvedPagePath:"C:\\Users\\T\\Projects\\mcplookup.org\\src\\app\\api\\v1\\register\\route.ts",nextConfigOutput:"",userland:t}),{workAsyncStorage:b,workUnitAsyncStorage:m,serverHooks:g}=p;function z(){return(0,n.patchFetch)({workAsyncStorage:b,workUnitAsyncStorage:m})}},55511:e=>{"use strict";e.exports=require("crypto")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},78335:()=>{},96487:()=>{}};var r=require("../../../../webpack-runtime.js");r.C(e);var i=e=>r(r.s=e),t=r.X(0,[719,580,697,116],()=>i(54374));module.exports=t})();