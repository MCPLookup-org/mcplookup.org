(()=>{var e={};e.id=765,e.ids=[765],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},35672:e=>{"use strict";e.exports=require("dns/promises")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},55511:e=>{"use strict";e.exports=require("crypto")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},78335:()=>{},90450:(e,r,t)=>{"use strict";t.r(r),t.d(r,{patchFetch:()=>g,routeModule:()=>p,serverHooks:()=>v,workAsyncStorage:()=>x,workUnitAsyncStorage:()=>f});var s={};t.r(s),t.d(s,{GET:()=>u,OPTIONS:()=>d,POST:()=>l});var o=t(96559),n=t(48088),i=t(37719),a=t(32190),c=t(57116);async function l(e,{params:r}){try{let{id:e}=await r;if(!e)return a.NextResponse.json({error:"Challenge ID is required"},{status:400});let t=(0,c.lI)();if(!await t.verifyDNSChallenge(e))return a.NextResponse.json({verified:!1,error:"DNS verification failed",details:"The required TXT record was not found or is incorrect."},{status:400});{let e={verified:!0,domain:"example.com",verified_at:new Date().toISOString(),registration_status:"verified",next_steps:"Your MCP server has been successfully registered and is now discoverable."};return a.NextResponse.json(e,{headers:{"Cache-Control":"no-cache","Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"POST, OPTIONS","Access-Control-Allow-Headers":"Content-Type"}})}}catch(e){if(console.error("Verification API error:",e),e instanceof Error&&e.message.includes("not found"))return a.NextResponse.json({error:"Challenge not found or expired"},{status:404});return a.NextResponse.json({error:"Internal server error"},{status:500})}}async function u(e,{params:r}){try{let{id:e}=await r;if(!e)return a.NextResponse.json({error:"Challenge ID is required"},{status:400});let t={challenge_id:e,domain:"example.com",status:"pending",expires_at:new Date(Date.now()+864e5).toISOString(),txt_record_name:"_mcplookup-verify.example.com",txt_record_value:"mcplookup-verify=abc123def456"};return a.NextResponse.json(t,{headers:{"Cache-Control":"public, s-maxage=60","Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"GET, OPTIONS","Access-Control-Allow-Headers":"Content-Type"}})}catch(e){return console.error("Verification status API error:",e),a.NextResponse.json({error:"Internal server error"},{status:500})}}async function d(){return new a.NextResponse(null,{status:200,headers:{"Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"GET, POST, OPTIONS","Access-Control-Allow-Headers":"Content-Type"}})}let p=new o.AppRouteRouteModule({definition:{kind:n.RouteKind.APP_ROUTE,page:"/api/v1/register/verify/[id]/route",pathname:"/api/v1/register/verify/[id]",filename:"route",bundlePath:"app/api/v1/register/verify/[id]/route"},resolvedPagePath:"C:\\Users\\T\\Projects\\mcplookup.org\\src\\app\\api\\v1\\register\\verify\\[id]\\route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:x,workUnitAsyncStorage:f,serverHooks:v}=p;function g(){return(0,i.patchFetch)({workAsyncStorage:x,workUnitAsyncStorage:f})}},96487:()=>{}};var r=require("../../../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[719,580,116],()=>t(90450));module.exports=s})();