(()=>{var e={};e.id=90,e.ids=[90],e.modules={846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},3033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},3716:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>w,routeModule:()=>y,serverHooks:()=>h,workAsyncStorage:()=>f,workUnitAsyncStorage:()=>v});var i={};r.r(i),r.d(i,{OPTIONS:()=>p,POST:()=>c});var n=r(6559),o=r(8088),s=r(7719),a=r(2190);async function c(e){try{let t,r=await e.json();if(!r.jsonrpc||"2.0"!==r.jsonrpc)return a.NextResponse.json({jsonrpc:"2.0",id:r.id||null,error:{code:-32600,message:"Invalid Request",data:"Missing or invalid jsonrpc field"}},{status:400});if(!r.method)return a.NextResponse.json({jsonrpc:"2.0",id:r.id||null,error:{code:-32600,message:"Invalid Request",data:"Missing method field"}},{status:400});switch(r.method){case"initialize":t=await l(r.params);break;case"tools/list":t=await d(r.params);break;case"tools/call":t=await m(r.params);break;case"resources/list":t=await u(r.params);break;case"resources/read":t=await g(r.params);break;default:return a.NextResponse.json({jsonrpc:"2.0",id:r.id||null,error:{code:-32601,message:"Method not found",data:`Unknown method: ${r.method}`}},{status:400})}return a.NextResponse.json({jsonrpc:"2.0",id:r.id,result:t},{headers:{"Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"POST, OPTIONS","Access-Control-Allow-Headers":"Content-Type"}})}catch(e){return console.error("MCP HTTP endpoint error:",e),a.NextResponse.json({jsonrpc:"2.0",id:null,error:{code:-32603,message:"Internal error",data:e instanceof Error?e.message:"Unknown error"}},{status:500})}}async function p(){return new a.NextResponse(null,{status:200,headers:{"Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"POST, OPTIONS","Access-Control-Allow-Headers":"Content-Type"}})}async function l(e){return{protocolVersion:"2024-11-05",capabilities:{tools:{listChanged:!1},resources:{subscribe:!1,listChanged:!1}},serverInfo:{name:"mcplookup-registry",version:"1.0.0"}}}async function d(e){return{tools:[{name:"discover_mcp_servers",description:"Discover MCP servers by domain, capability, intent, or category. Returns complete server information for immediate connection.",inputSchema:{type:"object",properties:{domain:{type:"string",description:'Exact domain match (e.g., "gmail.com", "github.com")'},capability:{type:"string",description:'Required capability (e.g., "email_send", "file_read")'},category:{type:"string",enum:["communication","productivity","data","development","content","integration","analytics","security","finance","ecommerce","social","other"],description:"Capability category filter"},intent:{type:"string",description:'Natural language intent (e.g., "check my email", "create a document")'},keywords:{type:"array",items:{type:"string"},description:"Search keywords"},limit:{type:"number",minimum:1,maximum:100,default:10,description:"Maximum number of results"}}}},{name:"register_mcp_server",description:"Register a new MCP server for discovery. Initiates DNS verification process.",inputSchema:{type:"object",properties:{domain:{type:"string",description:'Domain to register (e.g., "api.example.com")'},endpoint:{type:"string",format:"uri",description:"MCP endpoint URL (must be HTTPS)"},contact_email:{type:"string",format:"email",description:"Contact email for verification notifications"},description:{type:"string",description:"Server description and purpose"}},required:["domain","endpoint","contact_email"]}},{name:"verify_domain_ownership",description:"Check DNS verification status for a domain registration challenge.",inputSchema:{type:"object",properties:{challenge_id:{type:"string",format:"uuid",description:"Verification challenge ID from registration"}},required:["challenge_id"]}}]}}async function m(e){let{name:t,arguments:r}=e;switch(t){case"discover_mcp_servers":let i=new URLSearchParams;r.domain&&i.set("domain",r.domain),r.capability&&i.set("capability",r.capability),r.category&&i.set("category",r.category),r.intent&&i.set("intent",r.intent),r.keywords&&i.set("keywords",r.keywords.join(",")),r.limit&&i.set("limit",r.limit.toString());let n=`${process.env.NEXT_PUBLIC_APP_URL||"http://localhost:3000"}/api/v1/discover?${i}`;try{let e=await fetch(n),t=await e.json();return{content:[{type:"text",text:JSON.stringify(t,null,2)}]}}catch(e){throw Error(`Discovery failed: ${e instanceof Error?e.message:"Unknown error"}`)}case"register_mcp_server":return{content:[{type:"text",text:`DNS verification challenge created for ${r.domain}.

To verify ownership, add this DNS TXT record:

Name: _mcp-verify.${r.domain}
Value: v=mcp1 domain=${r.domain} token=abc123 timestamp=1234567890

Challenge ID: 123e4567-e89b-12d3-a456-426614174000
Expires: ${new Date(Date.now()+864e5).toISOString()}`}]};case"verify_domain_ownership":return{content:[{type:"text",text:"❌ Domain verification failed. Please ensure the DNS record is properly configured and try again."}]};default:throw Error(`Unknown tool: ${t}`)}}async function u(e){return{resources:[{uri:"mcplookup://servers/all",name:"All Registered Servers",description:"Complete list of all registered MCP servers",mimeType:"application/json"},{uri:"mcplookup://capabilities/taxonomy",name:"Capability Taxonomy",description:"Hierarchical structure of MCP capabilities",mimeType:"application/json"},{uri:"mcplookup://stats/discovery",name:"Discovery Statistics",description:"Usage and performance statistics",mimeType:"application/json"}]}}async function g(e){let{uri:t}=e;switch(t){case"mcplookup://servers/all":return{contents:[{uri:t,mimeType:"application/json",text:JSON.stringify({servers:[],total:0,generated_at:new Date().toISOString()},null,2)}]};case"mcplookup://capabilities/taxonomy":return{contents:[{uri:t,mimeType:"application/json",text:JSON.stringify({categories:{communication:["email","chat","messaging","notifications"],productivity:["calendar","tasks","notes","documents"],data:["databases","apis","storage","retrieval"],development:["code","git","ci-cd","deployment"]},generated_at:new Date().toISOString()},null,2)}]};case"mcplookup://stats/discovery":return{contents:[{uri:t,mimeType:"application/json",text:JSON.stringify({total_requests:12345,unique_agents:342,popular_queries:["gmail.com","email","github.com"],generated_at:new Date().toISOString()},null,2)}]};default:throw Error(`Unknown resource: ${t}`)}}let y=new n.AppRouteRouteModule({definition:{kind:o.RouteKind.APP_ROUTE,page:"/api/mcp/route",pathname:"/api/mcp",filename:"route",bundlePath:"app/api/mcp/route"},resolvedPagePath:"C:\\Users\\T\\Projects\\mcplookup.org\\src\\app\\api\\mcp\\route.ts",nextConfigOutput:"",userland:i}),{workAsyncStorage:f,workUnitAsyncStorage:v,serverHooks:h}=y;function w(){return(0,s.patchFetch)({workAsyncStorage:f,workUnitAsyncStorage:v})}},4870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6487:()=>{},8335:()=>{},9294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),i=t.X(0,[922],()=>r(3716));module.exports=i})();